# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Scala CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'
    - uses: sbt/setup-sbt@v1
    - name: Run tests
      # "+ test" runs tests with all scala versions
      run: sbt "+ test"
  
  publish:
    needs: [ build ]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: olafurpg/setup-gpg@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'
    - name: Setup key
      shell: bash
      run: echo "${{ secrets.GPG_PRIVATE_KEY }}" > key.gpg && gpg --import key.gpg
    - name: Publish
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      # "+ test" runs tests with all scala versions
      run: sbt "+ publishSigned"

  push_site:
    # only run if publish was successful
    needs: [ publish ]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_KEY }}
    # only update/publish docs for non-SNAPSHOT versions
    - run: echo "is_release=$(grep -v SNAPSHOT version.sbt | wc -l)" >> $GITHUB_ENV
      shell: bash
    - name: Set up JDK 11
      if: env.is_release == '1'
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'
    - run: |
        git config --global user.name "CI build push_site";
        git config --global user.email "oss@inoio.de";
      if: env.is_release == '1'
      shell: bash
    - name: Push site
      if: env.is_release == '1'
      run: sbt ghpagesPushSite
